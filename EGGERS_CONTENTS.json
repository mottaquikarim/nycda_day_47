{"home":{"content":"# Data Driven Rendering\n\nWelcome to **Lecture 47**! Here is a brief class breakdown.\n\n## Learning Objectives\n1. Understand how to take a data driven approach to rendering UI Components\n2. Consider how a unidirectional data flow can make it easier to reason about our data-focused apps\n3. Constructors!\n\n## To Do Today\n\n### [Warmup](#warmup)\n### [Flux](#flux)","idx":0},"title":{"content":"Data Driven Rendering","idx":1},"desc":{"content":"How to render apps based on *D*ata and not the *D*om","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin with a few warmup exercises\n\n## Exercise 1\n\nConsider our **[Yahoo! Weather App repo](https://github.com/mottaquikarim/nycda_supersimple_babel_example/tree/lecture46_data-driven-v2).**\n\nPlease clone the **lecture46_data-driven-v2** branch, like so:\n\n```\n$ git clone --branch lecture46_data-driven-v2 https://github.com/mottaquikarim/nycda_supersimple_babel_example\n```\n\n**Update** your Yahoo! weather app with this new feature:\n\n1. Instead of just one image per weather type, add support for three *different* images\n2. When the user clicks on the current picture, it should swap with the next image. \n3. When user clicks on the last image, it should go back to first image.\n\n**Remember** you are approaching this from a data driven perspective. Do not use the DOM to solve this problem.\n\n## Exercise 2\n\nConsider the following syntax for creating a Cat Object:\n\n```js\nconst Cat = function({name}) {\n    this.name = name;\n};\n\nCat.prototype.speak = function() {\n    return `meow I am ${this.name}`;\n}\n\nconst belle = new Cat({name:'Annabelle Lee'})\n```\n\nNow consider the following:\n\n```js\nconst Taq = {\n    name: 'Mottaqui Karim',\n    age: 26,\n    occupation: 'chillin like a villain in ice cream fillin',\n    greet: () => 'Hello, my name is Mottaqui Karim'\n}\n\nconst Baba = {\n    name: 'Babajide Kale',\n    age: 25,\n    occupation: 'handin out incompletes on hw',\n    greet: () => 'yall just hatin, Drake is the GOAT'\n}\n```\n\nDesign and create a new class that allows us to create instances of Taq and Baba the way we created an instance of Belle","idx":3},"flux":{"content":"# Flux\n\nFlux is essentially a way of life for an app.\n\nHere are the major concepts:\n\n1. Store\n2. Actions\n3. Dispatcher","idx":4},"__list__":["home","title","desc","warmup","flux"]}